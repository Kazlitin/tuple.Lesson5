immutable_var = tuple([1, 2, 3, True, "apple"])
print(immutable_var)
print(type(immutable_var)) # проверил является ли кортежем

#immutable_var[0] = 100
#print(immutable_var)  # При выводе команды  можно увидеть что объект "кортеж" не поддерживает обращение по элементам

mutable_list = [1, 2, 3, 'a', 'banana']
print(mutable_list)
mutable_list[4] = "apple"
print(mutable_list)








# Изменяемые и неизменяемые объекты. Кортежи  (tuple)
#tuple_ = 1, 2, 3, 4
#tuple_2 = (1, 2, 3, 4)
#tuple_3 = tuple([1, 2, 3, 4])
#print(tuple_)   # в этом случае круглые скобки означают - кортеж - это тоже что и список но она не изменяемая
#(tuple_2) #кортеж можно написать без скобок (как выше) так и со скобками
#print(tuple_3) # кортеж можно вывести и таким способом
#print(type(tuple_))  #введя слово type при выводе можно увидеть что в команде есть кортеж

# кортеж не изменяемый. Но в кортеже можно писать данные разных типов

#tuple_ = 1, 2, 3, True, "Strih"     # это  кортеж
#list_ = [1, 2, 3, True, "String"]   # это  список
#print(tuple_.__sizeof__())   # __sizeof__  -  такая команда проверяет размер памяти
#print(list_.__sizeof__()) #
#tuple_ = ([1, 2], 0)   # внутри кортежа изменяемый список [1,2]
#print(tuple_)
#tuple_[0][0] = 2 # в списке который в кортеже заменяем 1 на 2
#print(tuple_)
#tuple_ = ([1, 2], 0) + (1, 2)  # кортеж также поддерживает конкотенацию (сложение строк) можно сложить 2 кортежа
#tuple_ = ([1, 2) * 3 # кортеж также поддерживает функцию умножения (нужно помнить внутри он не изменяем)